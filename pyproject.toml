[build-system]
requires = ['setuptools', 'wheel', 'plux>=1.3.1']
build-backend = "setuptools.build_meta"

[project]
name = "qd-core"
authors = [{ name = "a76yyyy", email = "q981331502@163.com" }]
description = "The core library and runtime of QD"
requires-python = ">=3.10"
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: MIT",
]
dependencies = [
    "build",
    "plux>=1.7",
    "tornado",
    "charset-normalizer",
    "requests",
    "pbkdf2",
    "pycryptodome",
    "croniter",
    "Jinja2",
    "u-msgpack-python",
    "pysocks",
    "faker",
    "fastapi",
    "aiofiles",
    "passlib",
    "aiohttp",
    "starlette",
    "tzdata",
    "pip",
    "pycurl>=7.45.3",
    "pydantic",
    "pydantic-settings",
    "PyYAML",
    "toml",
]

[project.urls]
Homepage = "https://qd-today.github.io/qd/"
Documentation = "https://qd-today.github.io/qd/"
Repository = "https://github.com/qd-today/qd"
Issues = "https://github.com/qd-today/qd/issues"

[project.optional-dependencies]
ocr = ["ddddocr"]
dev = [
    "colorama; sys_platform == 'win32'",
    "pytest",
    "ruff",
    "mypy",
    "types-croniter",
    "types-requests",
    "types-python-dateutil",
    "sqlalchemy2-stubs",
    "types-aiofiles",
    "pylint-pydantic",
    "types-passlib",
    "types-setuptools",
    "types-PyYAML",
    "types-toml"
]

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["qd_core*"]
exclude = ["test*"]

[tool.uv]
default-dev-dependencies = ["test", "format", "lint"]

[tool.uv.dev-dependencies]
test = ["pytest"]
format = ["ruff"]
lint = [
    "mypy",
    "types-croniter",
    "types-requests",
    "types-python-dateutil",
    "sqlalchemy2-stubs",
    "types-aiofiles",
    "pylint-pydantic",
    "types-passlib",
    "types-setuptools",
    "types-PyYAML",
]

[tool.uv.indexes]
tencent = "https://mirrors.tencent.com/pypi/simple"
pypi = "https://pypi.org/simple"

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"

[[tool.mypy.overrides]]
module = "mypy-umsgpack.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "ddddocr-umsgpack.*"
ignore_missing_imports = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py38" # 注意这里将py37改为py38，因为Ruff支持Python 3.7以上版本

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [ # 选择的规则
    "F",
    "E",
    "W",
    "UP",
    "N",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.extend-per-file-ignores]
"schemas.py" = ["N805"]
"__init__.py" = ["F401"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
